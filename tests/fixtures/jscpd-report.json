{
  "duplicates": [
    {
      "format": "python",
      "lines": 33,
      "fragment": "data = []\n    story = []\n    for line in lines:\n        line = line.decode('utf-8').strip()\n        nid, line = line.split(' ', 1)\n        nid = int(nid)\n        if nid == 1:\n            story = []\n        if '\\t' in line:\n            q, a, supporting = line.split('\\t')\n            q = tokenize(q)\n            if only_supporting:\n                # Only select the related substory\n                supporting = map(int, supporting.split())\n                substory = [story[i - 1] for i in supporting]\n            else:\n                # Provide all the substories\n                substory = [x for x in story if x]\n            data.append((substory, q, a))\n            story.append('')\n        else:\n            sent = tokenize(line)\n            story.append(sent)\n    return data\n\n\ndef get_stories(f, only_supporting=False, max_length=None):\n    '''Given a file name, read the file, retrieve the stories,\n    and then convert the sentences into a single story.\n\n    If max_length is supplied,\n    any stories longer than max_length tokens will be discarded.\n    '''",
      "tokens": 0,
      "firstFile": {
        "name": "examples/babi_rnn.py",
        "start": 91,
        "end": 123,
        "startLoc": {
          "line": 91,
          "column": 5
        },
        "endLoc": {
          "line": 123,
          "column": 8
        }
      },
      "secondFile": {
        "name": "examples/babi_memnn.py",
        "start": 46,
        "end": 79,
        "startLoc": {
          "line": 46,
          "column": 5
        },
        "endLoc": {
          "line": 79,
          "column": 8
        }
      }
    },
    {
      "format": "python",
      "lines": 8,
      "fragment": "data = parse_stories(f.readlines(), only_supporting=only_supporting)\n    flatten = lambda data: reduce(lambda x, y: x + y, data)\n    data = [(flatten(story), q, answer) for story, q, answer in data\n            if not max_length or len(flatten(story)) < max_length]\n    return data\n\n\ndef vectorize_stories(data,",
      "tokens": 0,
      "firstFile": {
        "name": "examples/babi_rnn.py",
        "start": 124,
        "end": 131,
        "startLoc": {
          "line": 124,
          "column": 5
        },
        "endLoc": {
          "line": 131,
          "column": 28
        }
      },
      "secondFile": {
        "name": "examples/babi_memnn.py",
        "start": 80,
        "end": 87,
        "startLoc": {
          "line": 80,
          "column": 5
        },
        "endLoc": {
          "line": 87,
          "column": 28
        }
      }
    },
    {
      "format": "python",
      "lines": 12,
      "fragment": "x = AveragePooling2D(pool_size=8)(x)\n    y = Flatten()(x)\n    outputs = Dense(num_classes,\n                    activation='softmax',\n                    kernel_initializer='he_normal')(y)\n\n    # Instantiate model.\n    model = Model(inputs=inputs, outputs=outputs)\n    return model\n\n\nif",
      "tokens": 0,
      "firstFile": {
        "name": "examples/cifar10_resnet.py",
        "start": 344,
        "end": 355,
        "startLoc": {
          "line": 344,
          "column": 5
        },
        "endLoc": {
          "line": 355,
          "column": 3
        }
      },
      "secondFile": {
        "name": "examples/cifar10_resnet.py",
        "start": 248,
        "end": 259,
        "startLoc": {
          "line": 248,
          "column": 5
        },
        "endLoc": {
          "line": 259,
          "column": 4
        }
      }
    },
    {
      "format": "python",
      "lines": 13,
      "fragment": "),\n                   padding='same', return_sequences=True))\nseq.add(BatchNormalization())\n\nseq.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),\n                   padding='same', return_sequences=True))\nseq.add(BatchNormalization())\n\nseq.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),\n                   padding='same', return_sequences=True))\nseq.add(BatchNormalization())\n\nseq.add(Conv3D",
      "tokens": 0,
      "firstFile": {
        "name": "examples/conv_lstm.py",
        "start": 24,
        "end": 36,
        "startLoc": {
          "line": 24,
          "column": 49
        },
        "endLoc": {
          "line": 36,
          "column": 15
        }
      },
      "secondFile": {
        "name": "examples/conv_lstm.py",
        "start": 20,
        "end": 28,
        "startLoc": {
          "line": 20,
          "column": 48
        },
        "endLoc": {
          "line": 28,
          "column": 19
        }
      }
    },
    {
      "format": "python",
      "lines": 12,
      "fragment": "print('Loading data...')\n(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=max_features)\nprint(len(x_train), 'train sequences')\nprint(len(x_test), 'test sequences')\n\nprint('Pad sequences (samples x time)')\nx_train = sequence.pad_sequences(x_train, maxlen=maxlen)\nx_test = sequence.pad_sequences(x_test, maxlen=maxlen)\nprint('x_train shape:', x_train.shape)\nprint('x_test shape:', x_test.shape)\n\nprint",
      "tokens": 0,
      "firstFile": {
        "name": "examples/imdb_cnn.py",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 1
        },
        "endLoc": {
          "line": 38,
          "column": 6
        }
      },
      "secondFile": {
        "name": "examples/imdb_bidirectional_lstm.py",
        "start": 23,
        "end": 33,
        "startLoc": {
          "line": 23,
          "column": 1
        },
        "endLoc": {
          "line": 33,
          "column": 8
        }
      }
    },
    {
      "format": "python",
      "lines": 15,
      "fragment": "print('Loading data...')\n(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=max_features)\nprint(len(x_train), 'train sequences')\nprint(len(x_test), 'test sequences')\n\nprint('Pad sequences (samples x time)')\nx_train = sequence.pad_sequences(x_train, maxlen=maxlen)\nx_test = sequence.pad_sequences(x_test, maxlen=maxlen)\nprint('x_train shape:', x_train.shape)\nprint('x_test shape:', x_test.shape)\n\nprint('Build model...')\n\nmodel = Sequential()\nmodel",
      "tokens": 0,
      "firstFile": {
        "name": "examples/imdb_cnn_lstm.py",
        "start": 39,
        "end": 53,
        "startLoc": {
          "line": 39,
          "column": 1
        },
        "endLoc": {
          "line": 53,
          "column": 6
        }
      },
      "secondFile": {
        "name": "examples/imdb_bidirectional_lstm.py",
        "start": 23,
        "end": 41,
        "startLoc": {
          "line": 23,
          "column": 1
        },
        "endLoc": {
          "line": 41,
          "column": 60
        }
      }
    },
    {
      "format": "python",
      "lines": 15,
      "fragment": ")\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    help_ = \"Load h5 model trained weights\"\n    parser.add_argument(\"-w\", \"--weights\", help=help_)\n    help_ = \"Use mse loss instead of binary cross entropy (default)\"\n    parser.add_argument(\"-m\", \"--mse\", help=help_, action='store_true')\n    args = parser.parse_args()\n    models = (encoder, decoder)\n    data = (x_test, y_test)\n\n    # VAE loss = mse_loss or xent_loss + kl_loss\n    if args.mse:\n        reconstruction_loss = mse(K",
      "tokens": 0,
      "firstFile": {
        "name": "examples/variational_autoencoder_deconv.py",
        "start": 191,
        "end": 205,
        "startLoc": {
          "line": 191,
          "column": 40
        },
        "endLoc": {
          "line": 205,
          "column": 36
        }
      },
      "secondFile": {
        "name": "examples/variational_autoencoder.py",
        "start": 161,
        "end": 177,
        "startLoc": {
          "line": 161,
          "column": 44
        },
        "endLoc": {
          "line": 177,
          "column": 41
        }
      }
    },
    {
      "format": "python",
      "lines": 10,
      "fragment": "():\n    model = create_sequential_model()\n    model.compile(loss=loss, optimizer='rmsprop')\n\n    ((x_train, y_train), (x_test, y_test),\n     (sample_weight, class_weight, test_ids)) = _get_test_data()\n\n    model.fit(x_train, y_train, batch_size=batch_size,\n              epochs=epochs // 3, verbose=0,\n              sample_weight",
      "tokens": 0,
      "firstFile": {
        "name": "tests/test_loss_weighting.py",
        "start": 99,
        "end": 108,
        "startLoc": {
          "line": 99,
          "column": 35
        },
        "endLoc": {
          "line": 108,
          "column": 28
        }
      },
      "secondFile": {
        "name": "tests/test_loss_weighting.py",
        "start": 74,
        "end": 83,
        "startLoc": {
          "line": 74,
          "column": 34
        },
        "endLoc": {
          "line": 83,
          "column": 27
        }
      }
    },
    {
      "format": "python",
      "lines": 9,
      "fragment": "])\n    x = np.random.random((1, 3))\n    y = np.random.random((1, 3))\n    model.train_on_batch(x, y)\n\n    out = model.predict(x)\n    state = pickle.dumps(model)\n\n    model",
      "tokens": 0,
      "firstFile": {
        "name": "tests/test_model_pickling.py",
        "start": 87,
        "end": 95,
        "startLoc": {
          "line": 87,
          "column": 56
        },
        "endLoc": {
          "line": 95,
          "column": 10
        }
      },
      "secondFile": {
        "name": "tests/test_model_pickling.py",
        "start": 61,
        "end": 71,
        "startLoc": {
          "line": 61,
          "column": 73
        },
        "endLoc": {
          "line": 71,
          "column": 9
        }
      }
    },
    {
      "format": "markdown",
      "lines": 13,
      "fragment": "backend.\n\n---\n\nPlease make sure that the boxes below are checked before you submit your issue.\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\n\nThank you!\n\n- [ ] Check that you are up-to-date with the master branch of Keras. You can update with:\n`pip install git+git://github.com/keras-team/keras.git --upgrade --no-deps`\n\n- [ ] Check that your",
      "tokens": 0,
      "firstFile": {
        "name": ".github/ISSUE_TEMPLATE/c--cntk-backend-users.md",
        "start": 3,
        "end": 15,
        "startLoc": {
          "line": 3,
          "column": 56
        },
        "endLoc": {
          "line": 15,
          "column": 22
        }
      },
      "secondFile": {
        "name": ".github/ISSUE_TEMPLATE/b--theano-backend-users.md",
        "start": 3,
        "end": 15,
        "startLoc": {
          "line": 3,
          "column": 58
        },
        "endLoc": {
          "line": 15,
          "column": 21
        }
      }
    },
    {
      "format": "markdown",
      "lines": 7,
      "fragment": "\n```\n\n- __Returns:__\n    - 2 tuples:\n        - __x_train, x_test__: uint8 array of RGB image data with shape (num_samples, 3, 32, 32) or (num_samples, 32, 32, 3) based on the `image_data_format` backend setting of either `channels_first` or `channels_last` respectively.\n        - __y_train, y_test__: uint8 array of category labels with",
      "tokens": 0,
      "firstFile": {
        "name": "docs/templates/datasets.md",
        "start": 32,
        "end": 38,
        "startLoc": {
          "line": 32,
          "column": 77
        },
        "endLoc": {
          "line": 38,
          "column": 67
        }
      },
      "secondFile": {
        "name": "docs/templates/datasets.md",
        "start": 12,
        "end": 18,
        "startLoc": {
          "line": 12,
          "column": 59
        },
        "endLoc": {
          "line": 18,
          "column": 72
        }
      }
    }
  ],
  "statistics": {
    "detectionDate": "2020-02-13T12:21:00.233Z",
    "formats": {
      "yaml": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/.travis.yml": {
            "lines": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/stale.yml": {
            "lines": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/mkdocs.yml": {
            "lines": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 211,
          "sources": 3,
          "clones": 0,
          "duplicatedLines": 0,
          "percentage": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/CONTRIBUTING.md": {
            "lines": 95,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/ISSUE_TEMPLATE.md": {
            "lines": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/PULL_REQUEST_TEMPLATE.md": {
            "lines": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/README.md": {
            "lines": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docker/README.md": {
            "lines": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/README.md": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/README.md": {
            "lines": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/ISSUE_TEMPLATE/a--tensorflow-backend-users.md": {
            "lines": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/ISSUE_TEMPLATE/b--theano-backend-users.md": {
            "lines": 18,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "percentage": 66.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/ISSUE_TEMPLATE/c--cntk-backend-users.md": {
            "lines": 17,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "percentage": 70.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/ISSUE_TEMPLATE/d--keras-preprocessing-users.md": {
            "lines": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/ISSUE_TEMPLATE/e--keras-applications-users.md": {
            "lines": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/PULL_REQUEST_TEMPLATE/a--bug-fix.md": {
            "lines": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/.github/PULL_REQUEST_TEMPLATE/b--new-feature.md": {
            "lines": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/activations.md": {
            "lines": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/backend.md": {
            "lines": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/callbacks.md": {
            "lines": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/constraints.md": {
            "lines": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/datasets.md": {
            "lines": 205,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "percentage": 5.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/index.md": {
            "lines": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/initializers.md": {
            "lines": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/losses.md": {
            "lines": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/metrics.md": {
            "lines": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/optimizers.md": {
            "lines": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/regularizers.md": {
            "lines": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/scikit-learn-api.md": {
            "lines": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/visualization.md": {
            "lines": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/why-use-keras.md": {
            "lines": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/getting-started/functional-api-guide.md": {
            "lines": 435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/getting-started/sequential-model-guide.md": {
            "lines": 397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/layers/about-keras-layers.md": {
            "lines": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/layers/writing-your-own-keras-layers.md": {
            "lines": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/models/about-keras-models.md": {
            "lines": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/models/model.md": {
            "lines": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/models/sequential.md": {
            "lines": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/preprocessing/image.md": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/preprocessing/text.md": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2594,
          "sources": 37,
          "clones": 2,
          "duplicatedLines": 18,
          "percentage": 0.69,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "ini": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/pytest.ini": {
            "lines": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 24,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "percentage": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "python": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/setup.py": {
            "lines": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/update_api.py": {
            "lines": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/autogen.py": {
            "lines": 473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/structure.py": {
            "lines": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/addition_rnn.py": {
            "lines": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/antirectifier.py": {
            "lines": 108,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "percentage": 14.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/babi_memnn.py": {
            "lines": 231,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "percentage": 16.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/babi_rnn.py": {
            "lines": 228,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "percentage": 17.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/cifar10_cnn.py": {
            "lines": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/cifar10_resnet.py": {
            "lines": 455,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "percentage": 4.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/class_activation_maps.py": {
            "lines": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/cnn_seq2seq.py": {
            "lines": 207,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 106,
            "percentage": 51.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/conv_filter_visualization.py": {
            "lines": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/conv_lstm.py": {
            "lines": 143,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "percentage": 16.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/deep_dream.py": {
            "lines": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/imdb_bidirectional_lstm.py": {
            "lines": 49,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "percentage": 81.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/imdb_cnn.py": {
            "lines": 73,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "percentage": 38.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/imdb_cnn_lstm.py": {
            "lines": 76,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "percentage": 18.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/imdb_fasttext.py": {
            "lines": 144,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 29,
            "percentage": 20.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/imdb_lstm.py": {
            "lines": 60,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "percentage": 25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/lstm_seq2seq.py": {
            "lines": 234,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 123,
            "percentage": 52.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/lstm_seq2seq_restore.py": {
            "lines": 151,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 101,
            "percentage": 66.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/lstm_stateful.py": {
            "lines": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/lstm_text_generation.py": {
            "lines": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_acgan.py": {
            "lines": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_cnn.py": {
            "lines": 70,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 72,
            "percentage": 102.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_denoising_autoencoder.py": {
            "lines": 149,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "percentage": 5.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_hierarchical_rnn.py": {
            "lines": 98,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "percentage": 9.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_irnn.py": {
            "lines": 73,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "percentage": 17.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_mlp.py": {
            "lines": 56,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "percentage": 55.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_net2net.py": {
            "lines": 401,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 32,
            "percentage": 7.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_siamese.py": {
            "lines": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_sklearn_wrapper.py": {
            "lines": 102,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "percentage": 15.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_swwae.py": {
            "lines": 190,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "percentage": 4.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/mnist_transfer_cnn.py": {
            "lines": 124,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "percentage": 8.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/neural_doodle.py": {
            "lines": 382,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 74,
            "percentage": 19.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/neural_style_transfer.py": {
            "lines": 298,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 74,
            "percentage": 24.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/pretrained_word_embeddings.py": {
            "lines": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/reuters_mlp.py": {
            "lines": 60,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "percentage": 38.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/reuters_mlp_relu_vs_selu.py": {
            "lines": 175,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "percentage": 13.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/variational_autoencoder.py": {
            "lines": 207,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 83,
            "percentage": 40.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/examples/variational_autoencoder_deconv.py": {
            "lines": 230,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 91,
            "percentage": 39.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/__init__.py": {
            "lines": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/activations.py": {
            "lines": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/constraints.py": {
            "lines": 183,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "percentage": 7.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/models.py": {
            "lines": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/objectives.py": {
            "lines": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/regularizers.py": {
            "lines": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "percentage": 15.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/conftest.py": {
            "lines": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/test_api.py": {
            "lines": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/test_dynamic_trainability.py": {
            "lines": 110,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "percentage": 40,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/test_loss_masking.py": {
            "lines": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/test_loss_weighting.py": {
            "lines": 174,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "percentage": 10.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/test_model_pickling.py": {
            "lines": 147,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "percentage": 10.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/__init__.py": {
            "lines": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/densenet.py": {
            "lines": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/imagenet_utils.py": {
            "lines": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/inception_resnet_v2.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/inception_v3.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/mobilenet.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/mobilenet_v2.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/nasnet.py": {
            "lines": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet.py": {
            "lines": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet50.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet_v2.py": {
            "lines": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/vgg16.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/vgg19.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/xception.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/backend/__init__.py": {
            "lines": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/backend/common.py": {
            "lines": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/backend/load_backend.py": {
            "lines": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/callbacks/__init__.py": {
            "lines": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/callbacks/tensorboard_v1.py": {
            "lines": 362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/callbacks/tensorboard_v2.py": {
            "lines": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/__init__.py": {
            "lines": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/boston_housing.py": {
            "lines": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/cifar.py": {
            "lines": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/cifar10.py": {
            "lines": 44,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "percentage": 20.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/cifar100.py": {
            "lines": 46,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "percentage": 19.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/fashion_mnist.py": {
            "lines": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/imdb.py": {
            "lines": 121,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "percentage": 12.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/mnist.py": {
            "lines": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/datasets/reuters.py": {
            "lines": 105,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "percentage": 14.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/__init__.py": {
            "lines": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/input_layer.py": {
            "lines": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/sequential.py": {
            "lines": 305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/topology.py": {
            "lines": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/training_arrays.py": {
            "lines": 471,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "percentage": 8.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/__init__.py": {
            "lines": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/advanced_activations.py": {
            "lines": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/embeddings.py": {
            "lines": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/local.py": {
            "lines": 393,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 88,
            "percentage": 22.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/noise.py": {
            "lines": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/normalization.py": {
            "lines": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/preprocessing/__init__.py": {
            "lines": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/preprocessing/sequence.py": {
            "lines": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/preprocessing/text.py": {
            "lines": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/__init__.py": {
            "lines": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/conv_utils.py": {
            "lines": 181,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/io_utils.py": {
            "lines": 430,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/layer_utils.py": {
            "lines": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/losses_utils.py": {
            "lines": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/metrics_utils.py": {
            "lines": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/multi_gpu_utils.py": {
            "lines": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/np_utils.py": {
            "lines": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/test_utils.py": {
            "lines": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/vis_utils.py": {
            "lines": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/wrappers/scikit_learn.py": {
            "lines": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/docs/test_doc_auto_generation.py": {
            "lines": 422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/docs/test_documentation.py": {
            "lines": 180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/applications_test.py": {
            "lines": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/imagenet_utils_test.py": {
            "lines": 113,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "percentage": 12.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_datasets.py": {
            "lines": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_image_data_tasks.py": {
            "lines": 80,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "percentage": 66.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_temporal_data_tasks.py": {
            "lines": 180,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "percentage": 17.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_tensorflow_integration.py": {
            "lines": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_vector_data_tasks.py": {
            "lines": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/activations_test.py": {
            "lines": 248,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "percentage": 4.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/constraints_test.py": {
            "lines": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/initializers_test.py": {
            "lines": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/metrics_correctness_test.py": {
            "lines": 379,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "percentage": 3.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/metrics_functional_test.py": {
            "lines": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/metrics_training_test.py": {
            "lines": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/optimizers_test.py": {
            "lines": 179,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "percentage": 7.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/regularizers_test.py": {
            "lines": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/test_sequential_model.py": {
            "lines": 497,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 115,
            "percentage": 23.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/preprocessing/sequence_test.py": {
            "lines": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/preprocessing/text_test.py": {
            "lines": 126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/callbacks/tensorboard_test.py": {
            "lines": 273,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "percentage": 3.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/datasets/datasets_test.py": {
            "lines": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/engine/layer_subclassing_tests.py": {
            "lines": 203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/advanced_activations_test.py": {
            "lines": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/convolutional_recurrent_test.py": {
            "lines": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/core_test.py": {
            "lines": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/cudnn_recurrent_test.py": {
            "lines": 384,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 96,
            "percentage": 25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/embeddings_test.py": {
            "lines": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/local_test.py": {
            "lines": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/merge_test.py": {
            "lines": 292,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 104,
            "percentage": 35.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/noise_test.py": {
            "lines": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/normalization_test.py": {
            "lines": 244,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 53,
            "percentage": 21.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/pooling_test.py": {
            "lines": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/legacy/conftest.py": {
            "lines": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/legacy/layers_test.py": {
            "lines": 39,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "percentage": 41.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/conv_utils_test.py": {
            "lines": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/generic_utils_test.py": {
            "lines": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/io_utils_test.py": {
            "lines": 352,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "percentage": 5.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/layer_utils_test.py": {
            "lines": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/multi_gpu_test.py": {
            "lines": 304,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "percentage": 6.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/np_utils_test.py": {
            "lines": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/vis_utils_test.py": {
            "lines": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/wrappers/scikit_learn_test.py": {
            "lines": 204,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 24,
            "percentage": 11.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 23152,
          "sources": 151,
          "clones": 82,
          "duplicatedLines": 1019,
          "percentage": 4.4,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "bash": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/.travis/install_cntk.sh": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 11,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "percentage": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "unknown": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/keras/regularizers.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/conftest.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/densenet.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/imagenet_utils.py": {
            "lines": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/inception_resnet_v2.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/inception_v3.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/mobilenet.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/mobilenet_v2.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/nasnet.py": {
            "lines": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet50.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/resnet_v2.py": {
            "lines": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/vgg16.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/vgg19.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/applications/xception.py": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/input_layer.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/engine/sequential.py": {
            "lines": 194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/advanced_activations.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/embeddings.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/local.py": {
            "lines": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/noise.py": {
            "lines": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/layers/normalization.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/io_utils.py": {
            "lines": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/losses_utils.py": {
            "lines": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/metrics_utils.py": {
            "lines": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/keras/utils/test_utils.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/docs/test_doc_auto_generation.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/docs/test_documentation.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_temporal_data_tasks.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/integration_tests/test_tensorflow_integration.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/initializers_test.py": {
            "lines": 117,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 220,
            "percentage": 188.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/metrics_functional_test.py": {
            "lines": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/metrics_training_test.py": {
            "lines": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/optimizers_test.py": {
            "lines": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/test_sequential_model.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/callbacks/tensorboard_test.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/datasets/datasets_test.py": {
            "lines": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/engine/layer_subclassing_tests.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/advanced_activations_test.py": {
            "lines": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/convolutional_recurrent_test.py": {
            "lines": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/core_test.py": {
            "lines": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/cudnn_recurrent_test.py": {
            "lines": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/embeddings_test.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/noise_test.py": {
            "lines": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/normalization_test.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/layers/pooling_test.py": {
            "lines": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/legacy/conftest.py": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/generic_utils_test.py": {
            "lines": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/tests/keras/utils/io_utils_test.py": {
            "lines": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2095,
          "sources": 49,
          "clones": 1,
          "duplicatedLines": 110,
          "percentage": 5.25,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/docs/templates/index.md": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/why-use-keras.md": {
            "lines": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/versions.html": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/getting-started/functional-api-guide.md": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/templates/getting-started/sequential-model-guide.md": {
            "lines": 1,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/css/theme_extra.css": {
            "lines": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 223,
          "sources": 6,
          "clones": 0,
          "duplicatedLines": 0,
          "percentage": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markup": {
        "sources": {
          "/Users/ms/dev/hackathon/keras/docs/theme/404.html": {
            "lines": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/base.html": {
            "lines": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/breadcrumbs.html": {
            "lines": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/footer.html": {
            "lines": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/nav.html": {
            "lines": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/search.html": {
            "lines": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/searchbox.html": {
            "lines": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/toc.html": {
            "lines": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ms/dev/hackathon/keras/docs/theme/versions.html": {
            "lines": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "percentage": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 315,
          "sources": 9,
          "clones": 0,
          "duplicatedLines": 0,
          "percentage": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 28625,
      "sources": 257,
      "clones": 85,
      "duplicatedLines": 1147,
      "percentage": 4.01,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  }
}